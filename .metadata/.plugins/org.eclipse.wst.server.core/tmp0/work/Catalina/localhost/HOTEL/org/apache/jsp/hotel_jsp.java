/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-02-18 05:40:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class hotel_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("<link rel=\"stylesheet\" href=\"//unpkg.com/bootstrap@4/dist/css/bootstrap.min.css\">\n");
      out.write("<script src='//unpkg.com/jquery@3/dist/jquery.min.js'></script>\n");
      out.write("<script src='//unpkg.com/popper.js@1/dist/umd/popper.min.js'></script>\n");
      out.write("<script src='//unpkg.com/bootstrap@4/dist/js/bootstrap.min.js'></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath() );
      out.write("/css/style.css\" />\n");
      out.write("<title>호텔 페이지</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<header>\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n");
      out.write("		<div class=\"container-fluid\">\n");
      out.write("			<a class=\"navbar-brand\" href=\"#\">\n");
      out.write("				<img src=\"img/premium-icon-letter-h-5540593.png\" alt=\"\" width=\"30\" height=\"30\" class=\"d-inline-block align-text-top\">\n");
      out.write("				<span class=\"navbar-brand mb-0 h1\">Hotels 4TEAM</span>\n");
      out.write("			</a>\n");
      out.write("			<div class=\"d-flex justify-content-end\">\n");
      out.write("				<div class=\"dropdown mr-2\">\n");
      out.write("					<a class=\"btn btn-outline-secondary dropdown-toggle\" href=\"#\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-expanded=\"false\">\n");
      out.write("						도움말\n");
      out.write("					</a>\n");
      out.write("					<div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\n");
      out.write("						<a class=\"dropdown-item\" href=\"#\">공지 사항</a>\n");
      out.write("						<a class=\"dropdown-item\" href=\"#\">문의 사항</a>\n");
      out.write("						<a class=\"dropdown-item\" href=\"#\">FAQ</a>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				<a class=\"btn btn-primary mr-2\" href=\".jsp\">마이페이지</a>\n");
      out.write("				<a class=\"btn btn-primary mr-2\" href=\".jsp\">로그아웃</a>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</nav>\n");
      out.write("</header>\n");
      out.write("\n");
      out.write("<main>\n");
      out.write("	<div class=\"name\">호텔명</div>\n");
      out.write("\n");
      out.write("	<div class=\"main\">\n");
      out.write("		<div class=\"hotel-image\">호텔이미지</div>\n");
      out.write("\n");
      out.write("		<div class=\"sub-image1\">호텔이미지1</div>\n");
      out.write("		<div class=\"sub-image2\">호텔이미지2</div>\n");
      out.write("		<div class=\"sub-image3\">호텔이미지3</div>\n");
      out.write("\n");
      out.write("		<div class=\"info\">호텔정보</div>\n");
      out.write("		\n");
      out.write("		<div id=\"staticMap\"></div>\n");
      out.write("			<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=2cbd152899fd818702b7769873ecb33b\"></script>\n");
      out.write("			<script>\n");
      out.write("			var staticMapContainer  = document.getElementById('staticMap'), // 이미지 지도를 표시할 div  \n");
      out.write("			    staticMapOption = { \n");
      out.write("			        center: new kakao.maps.LatLng(33.450701, 126.570667), // 이미지 지도의 중심좌표\n");
      out.write("			        level: 3 // 이미지 지도의 확대 레벨\n");
      out.write("			    };\n");
      out.write("			\n");
      out.write("			// 이미지 지도를 표시할 div와 옵션으로 이미지 지도를 생성합니다\n");
      out.write("			var staticMap = new kakao.maps.StaticMap(staticMapContainer, staticMapOption);\n");
      out.write("			</script>\n");
      out.write("\n");
      out.write("	<div class=\"price\">\n");
      out.write("      <div class=\"in\">체크인</div>\n");
      out.write("      <div class=\"out\">체크아웃</div>\n");
      out.write("      <div class=\"people\">인원</div>\n");
      out.write("      <div class=\"select\">객실선택</div>\n");
      out.write("      <div class=\"sum\">합계</div>\n");
      out.write("      <div class=\"res\">예약하기</div>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("		<div class=\"review\">리뷰</div>\n");
      out.write("	</div>\n");
      out.write("  \n");
      out.write("  <div class=\"room\">\n");
      out.write("    <div class=\"room-num\">룸</div>\n");
      out.write("    <div class=\"room-info\">객실정보</div>\n");
      out.write("    <div class=\"room-name\">룸이름</div>\n");
      out.write("    <div class=\"room-name2\"></div>\n");
      out.write("  </div>	\n");
      out.write("</main>\n");
      out.write("\n");
      out.write("<footer>\n");
      out.write("\n");
      out.write("</footer>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
